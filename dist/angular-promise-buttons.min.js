angular.module("angularPromiseButtons",[]),angular.module("angularPromiseButtons").directive("promiseBtn",["angularPromiseButtons","$parse",function(a,b){"use strict";var c="click",d="ngClick",e="submit",f="ngSubmit";return{restrict:"EA",scope:{promiseBtn:"=",promiseBtnOptions:"=?"},link:function(g,h,i){function j(a){t.btnLoadingClass&&!t.addClassToCurrentBtnOnly&&a.addClass(t.btnLoadingClass),t.disableBtn&&!t.disableCurrentBtnOnly&&a.attr("disabled","disabled")}function k(a){t.btnLoadingClass&&a.removeClass(t.btnLoadingClass),t.disableBtn&&a.removeAttr("disabled")}function l(a,b){g.$watch(a,function(a){a&&a.always?(j(b),a.always(function(){k(b)})):a&&a.then?(j(b),a["finally"](function(){k(b)})):a&&a.$promise&&(j(b),a.$promise["finally"](function(){k(b)}))})}function m(a){return a.split(";").map(function(a){return b(a)})}function n(a){a.append(t.spinnerTpl)}function o(a){t.addClassToCurrentBtnOnly&&a.on(c,function(){a.addClass(t.btnLoadingClass)}),t.disableCurrentBtnOnly&&a.on(c,function(){a.attr("disabled","disabled")})}function p(a,b,c){g.$evalAsync(function(){var d=m(i[b]);h.unbind(a),h.bind(a,function(){g.$apply(function(){d.forEach(function(b){var d=b(g.$parent,{$event:a});r||(r=l(function(){return d},c))})})})})}function q(a){for(var b=[],c=a.find("button"),d=0;d<c.length;d++){var e=c[d];"submit"===angular.element(e).attr("type")&&b.push(e)}return angular.element(b)}var r,s=a.config,t=s;if(i.promiseBtn)n(h),o(h),l(function(){return g.promiseBtn},h);else if(i.hasOwnProperty(d))n(h),o(h),p(c,d,h);else if(i.hasOwnProperty(f)){var u=q(h);n(u),o(u),p(e,f,u)}g.$watch("promiseBtnOptions",function(a){angular.isObject(a)&&(t=angular.extend({},s,a))},!0)}}}]),angular.module("angularPromiseButtons").provider("angularPromiseButtons",function(){"use strict";var a={spinnerTpl:'<span class="btn-spinner"></span>',disableBtn:!0,btnLoadingClass:"is-loading",addClassToCurrentBtnOnly:!1,disableCurrentBtnOnly:!1};return{extendConfig:function(b){a=angular.extend(a,b)},$get:function(){return{config:a}}}});